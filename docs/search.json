{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-08-10T22:42:08+00:00"
    },
    {
      "path": "adtheme.html",
      "title": "So Many Ads, So Many Themes",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\n\n#total1<- bind_cols(data_ad, data_ad_time %>% select(-year, -brand))\n\n\n\n\n\n\n\n\n\n\n# A tibble: 8 × 3\n  AdTime Frequency Proportion\n   <dbl>     <int>      <dbl>\n1     30       119     0.490 \n2     60        70     0.288 \n3     45        22     0.0905\n4     75        11     0.0453\n5     15         8     0.0329\n6    120         7     0.0288\n7     90         3     0.0123\n8    100         3     0.0123\n# A tibble: 41 × 4\n# Groups:   diversity [2]\n    Year diversity Frequency Proportion\n   <dbl> <lgl>         <int>      <dbl>\n 1  2000 FALSE             6     0.0408\n 2  2000 TRUE              2     0.0208\n 3  2001 FALSE             7     0.0476\n 4  2001 TRUE              6     0.0625\n 5  2002 FALSE             9     0.0612\n 6  2002 TRUE              1     0.0104\n 7  2003 FALSE             5     0.0340\n 8  2003 TRUE              7     0.0729\n 9  2004 FALSE             8     0.0544\n10  2004 TRUE              3     0.0312\n11  2005 FALSE             5     0.0340\n12  2005 TRUE              3     0.0312\n13  2006 FALSE             4     0.0272\n14  2006 TRUE              3     0.0312\n15  2007 FALSE             9     0.0612\n16  2007 TRUE              5     0.0521\n17  2008 FALSE             9     0.0612\n18  2008 TRUE              4     0.0417\n19  2009 FALSE            10     0.0680\n20  2009 TRUE              5     0.0521\n21  2010 FALSE             8     0.0544\n22  2010 TRUE              6     0.0625\n23  2011 FALSE             8     0.0544\n24  2011 TRUE              1     0.0104\n25  2012 FALSE             7     0.0476\n26  2012 TRUE              8     0.0833\n27  2013 FALSE            10     0.0680\n28  2013 TRUE              5     0.0521\n29  2014 FALSE             5     0.0340\n30  2014 TRUE              9     0.0938\n31  2015 FALSE            10     0.0680\n32  2016 FALSE             5     0.0340\n33  2016 TRUE              8     0.0833\n34  2017 FALSE             2     0.0136\n35  2017 TRUE              3     0.0312\n36  2018 FALSE             9     0.0612\n37  2018 TRUE              5     0.0521\n38  2019 FALSE             9     0.0612\n39  2019 TRUE              6     0.0625\n40  2020 FALSE             2     0.0136\n41  2020 TRUE              6     0.0625\n\n\n\n\n\n",
      "last_modified": "2022-08-10T22:42:12+00:00"
    },
    {
      "path": "costanalysis.html",
      "title": "How Much has Ad Price Gone Up, You Ask?!",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\n\n\n\n\n\nsunburst Plot of total Ad Cost\n\n\n\n\n\n\n\n\n\n\n",
      "last_modified": "2022-08-10T22:42:13+00:00"
    },
    {
      "path": "index.html",
      "title": "STA 518 Final Project",
      "description": "In our final project, we will investigate superbowl ads from 2000 to 2020 using a data set from Five Thirty Eight. We will make a website or application that displays trends of brands’ advertisement strategies over time and use predictive modeling/ simulations to anticipate which direction superbowl ads will go in the future. Here is our link to the Main dataset (https://github.com/fivethirtyeight/superbowl-ads/blob/main/superbowl-ads.csv) and here is the link to the cost per second for ad (https://www.sportingnews.com/us/nfl/news/super-bowl-commercials-cost-2022/v9ytfqzx74pjrcdvxyhevlzd)\nCheck out our other tabs labeled \"Cost Analysis\" and \"Ad Themes\"!\n",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-08-10T22:42:14+00:00"
    },
    {
      "path": "Proposal.html",
      "author": [],
      "contents": "\nR Project Proposal\nValerie McIlvaine and Jake Bedi ## Introduction\nIn our final project, we will investigate superbowl ads from 2000 to 2020 using a data set from Five Thirty Eight. We will make a website or application that displays trends of brands’ advertisement strategies over time and use predictive modeling/ simulations to anticipate which direction superbowl ads will go in the future. {r setup, include=FALSE} knitr::opts_chunk$set(echo = TRUE) library(tidyverse) library(readr) library(tidyverse) library(highcharter) library(gapminder) library(htmlwidgets) library(kableExtra) library(fmsb) library(plotly)\n{r upload files} data_ad_time <- read_csv(\"~/STA 518/Final Project/Portfolio/Final Proposal/Final Project/Ad  Time _ Category - Sheet1.csv\") data <- read_csv(\"~/STA 518/Final Project/Portfolio/Final Proposal/Final Project/combined  - Sheet1.csv\") data_ad_cost <- read_csv(\"~/STA 518/Final Project/Portfolio/Final Proposal/Final Project/Cost per Super bowl ad 2000-2020 - Sheet1 (1).csv\") ```{r joining two data sets } # merge data and data_ad_cost together total <- inner_join(data, data_ad_cost, by=“year”) total dim(total) #chr to Numeric cost_per_minute and cost_per_thirty_seconds total11<- total%>% as.data.frame %>% mutate(cost_per_minute=str_remove_all(cost_per_minute,“[$,]”), cost_per_minute=as.numeric(cost_per_minute)) %>% mutate(cost_per_thirty_seconds=str_remove_all(cost_per_thirty_seconds,“[$,]”), cost_per_thirty_seconds=as.numeric(cost_per_thirty_seconds))%>%\nmutate(cost_per_second = cost_per_minute/60 )%>%\nmutate(cost_of_ad= cost_per_second*ad_time) %>% mutate(cost_of_ad_in_millions =cost_of_ad/1000000 )%>% mutate(cost_per_second_in_thousands =cost_per_second/100000)\ntotal11 # mutate(currency = scales::dollar(cost_per_second))\n```{r }\n#total1<- bind_cols(data_ad, data_ad_time %>% select(-year, -brand))\n{r exploratory bar charts} # count of brands use of gender ggplot(data=total, aes(x=category)) +   geom_bar(stat= \"count\", position=\"dodge\",color= \"black\", aes(fill=celebrity))+     ggtitle(\"Bar char of Super Bowl Ad Categories and Celebrity Apperances From 2000-2020\") ```{r line graph} ggplot(data=total11, aes(cost_per_second)) + geom_histogram(binwidth = 10)\n#line graph ggplot(data=total11, aes(x=year, y=cost_per_second_in_thousands)) + geom_line(linetype = “dashed”, color=“blue”, size=1)+ theme(legend.position=“bottom”)+ geom_point(color=“blue”)+ ggtitle(“Cost Per Second of Super Bowl Ads from 2000 to 2020”)+ ylab(“Cost (Hundreds of Thousands of Dollars)”)\n#histogram of distribtuion of cost_of_ad by Year\ntotal11 %>% group_by(year) ggplot(data=total11, aes(y=year, fill=year, color=year)) + geom_histogram(alpha=0.5, position=“dodge”, bins=10)+ scale_color_brewer(palette=\"“) + theme_classic()+theme(legend.position=”top\")\nggplot(data=total, aes(x=year)) + geom_bar( stat=“count”, position=“dodge”,colour=“black”, aes(fill=diversity))\n```{r porportions }\n ggplot(data=total11, aes(x= year, fill=use_sex))+\n   geom_bar(stat= \"count\", position=\"fill\")+\n   ggtitle(\"Porportion of SuperBowl Ads that use Sex Appeal from 2000 to 2020\")\n```{r boxplot, reorder }\n#reordering boxplots based on median cost_of_ad\nggplot(data=total11, aes(x= fct_reorder(category, cost_of_ad_in_millions), y=cost_of_ad_in_millions))+\ngeom_boxplot(fill=\"lightblue\")+\nggtitle(\"Boxplots of Cost Per Ad by Category\")+\nxlab(\"Ad Category\")+\nylab(\"Ad Cost in Millions\")\n{r tables} total11 %>% group_by(year) %>%   summarize_at()\n\n\n",
      "last_modified": "2022-08-10T22:42:14+00:00"
    },
    {
      "path": "Simulation.html",
      "title": "Simulation",
      "author": [],
      "contents": "\nR Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n\nsummary(cars)\n\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\nIncluding Plots\nYou can also embed plots, for example:\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n\n\n\n",
      "last_modified": "2022-08-10T22:42:14+00:00"
    }
  ],
  "collections": []
}
